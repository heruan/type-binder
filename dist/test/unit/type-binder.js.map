{"version":3,"sources":["../../src/test/unit/type-binder.ts"],"names":[],"mappings":"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","file":"type-binder.js","sourcesContent":["import \"reflect-metadata\";\nimport { bind, generics, track, identifier } from \"../../main/decorators\";\nimport { TypeBinder } from \"../../main/type-binder\";\n\n@identifier<Foo>(foo => foo.id)\nclass Foo {\n    id: number;\n}\n\nclass Bar extends Foo { }\n\n@identifier<Baz>(baz => baz.number)\nclass Baz {\n    @bind(() => Foo) foo: Foo;\n    @bind(() => Set) @generics(() => Bar) set: Set<Bar>;\n    @bind(() => Map) @generics(() => Foo, () => Bar) map: Map<Foo, Bar>;\n    @bind(() => Array) digits: number[];\n    @bind(() => Number) @track() number: number;\n    @bind(() => String) string: string;\n    bool: boolean;\n}\n\ndescribe(\"object-mapper\", () => {\n\n    it(\"maps an object\", () => {\n\n        let object = {\n            foo: { },\n            set: [\n                { }\n            ],\n            map: [\n                [ { }, { } ]\n            ],\n            digits: [ 1, 2, 3 ],\n            number: 123,\n            bool: true,\n            string: \"foobar\"\n        }\n\n        let baz = new TypeBinder().bind(object, Baz);\n        expect(baz).toEqual(jasmine.any(Baz));\n        expect(baz.foo).toEqual(jasmine.any(Foo));\n        expect(baz.set).toEqual(jasmine.any(Set));\n        baz.set.forEach(element => expect(element).toEqual(jasmine.any(Bar)));\n        expect(baz.map).toEqual(jasmine.any(Map));\n        baz.map.forEach((value, key) => {\n            expect(key).toEqual(jasmine.any(Foo));\n            expect(value).toEqual(jasmine.any(Bar));\n        });\n    });\n\n    it(\"maps an array of objects\", () => {\n\n        let array = [\n            { id: 1 },\n            { id: 2 },\n            { id: 3 }\n        ];\n\n        let foos = new TypeBinder().bind(array, Array, Foo);\n        foos.forEach(foo => expect(foo).toEqual(jasmine.any(Foo)));\n    });\n\n    it(\"tracks original values\", () => {\n\n        let object = {\n            number: 123\n        }\n\n        let baz = new TypeBinder().bind(object, Baz);\n        let diff = TypeBinder.propertyHasChanged(baz, \"number\");\n        expect(diff).toBe(false);\n        baz.number = 456;\n        diff = TypeBinder.propertyHasChanged(baz, \"number\");\n        expect(diff).toBe(true);\n    });\n\n    it(\"reuses object instances\", () => {\n        let object = {\n            foo: {\n                id: 1\n            }\n        };\n        let binder = new TypeBinder();\n        let baz = binder.bind(object, Baz);\n        let foo = binder.bind({ id: 1 }, Foo);\n        expect(baz.foo).toBe(foo);\n    });\n\n});\n"]}